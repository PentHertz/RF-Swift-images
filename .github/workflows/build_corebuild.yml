name: Multi-Platform Docker Build and Push

on:
  push:
    branches:
      - main

env:
  REGISTRY_IMAGE: penthertz/rfswiftdev

jobs:
  corebuild:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push corebuild image
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            -t corebuild:latest \
            -t ${{ env.REGISTRY_IMAGE }}:corebuild \
            -f Dockerfiles/SDR/corebuild.docker \
            --push \
            .

      - name: Pull corebuild image for local use
        run: |
          docker pull ${{ env.REGISTRY_IMAGE }}:corebuild
          docker tag ${{ env.REGISTRY_IMAGE }}:corebuild corebuild:latest

  sdr_light:
    runs-on: ubuntu-latest
    needs: corebuild
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push sdr_light image
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            -t sdr_light:latest \
            -t ${{ env.REGISTRY_IMAGE }}:sdr_light \
            -f Dockerfiles/SDR/sdr_light.docker \
            --push \
            .

      - name: Pull sdr_light image for local use
        run: |
          docker pull ${{ env.REGISTRY_IMAGE }}:sdr_light
          docker tag ${{ env.REGISTRY_IMAGE }}:sdr_light sdr_light:latest

  sdr_full:
    runs-on: ubuntu-latest
    needs: sdr_light
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push sdr_full image
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            -t sdr_full:latest \
            -t ${{ env.REGISTRY_IMAGE }}:sdr_full \
            -f Dockerfiles/SDR/sdr_full.docker \
            --push \
            .

      - name: Pull sdr_full image for local use
        run: |
          docker pull ${{ env.REGISTRY_IMAGE }}:sdr_full
          docker tag ${{ env.REGISTRY_IMAGE }}:sdr_full sdr_full:latest
