name: Multi-Platform Docker Build, Merge, and Push

on:
  push:
    branches:
      - main

env:
  REGISTRY_IMAGE: penthertz/rfswiftdev

jobs:
  corebuild:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build corebuild locally
        run: |
          docker buildx build --platform ${{ matrix.platform }} -t corebuild -f Dockerfiles/SDR/corebuild.docker --push .

  sdr_light:
    runs-on: ubuntu-latest
    needs: corebuild  # Ensure corebuild job completes first
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build sdr_light locally
        run: |
          docker buildx build --platform ${{ matrix.platform }} -t sdr_light -f Dockerfiles/SDR/sdr_light.docker --push .

  sdr_full:
    runs-on: ubuntu-latest
    needs: sdr_light  # Ensure sdr_light job completes first
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build sdr_full locally
        run: |
          docker buildx build --platform ${{ matrix.platform }} -t sdr_full -f Dockerfiles/SDR/sdr_full.docker --push .

  merge_and_push:
    runs-on: ubuntu-latest
    needs: [corebuild, sdr_light, sdr_full]  # Ensure all previous jobs complete first
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Merge corebuild images and push multi-platform image
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY_IMAGE }}:corebuild \
            ${{ env.REGISTRY_IMAGE }}:corebuild-linux/amd64 \
            ${{ env.REGISTRY_IMAGE }}:corebuild-linux/arm64

      - name: Merge sdr_light images and push multi-platform image
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY_IMAGE }}:sdr_light \
            ${{ env.REGISTRY_IMAGE }}:sdr_light-linux/amd64 \
            ${{ env.REGISTRY_IMAGE }}:sdr_light-linux/arm64

      - name: Merge sdr_full images and push multi-platform image
        run: |
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY_IMAGE }}:sdr_full \
            ${{ env.REGISTRY_IMAGE }}:sdr_full-linux/amd64 \
            ${{ env.REGISTRY_IMAGE }}:sdr_full-linux/arm64