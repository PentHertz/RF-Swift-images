name: Multi-Platform Docker Build with Caching

on:
  push:
    branches:
      - main

env:
  REGISTRY_IMAGE: penthertz/rfswiftdev

jobs:
  corebuild:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set up Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.platform }}-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push corebuild image
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            -t ${{ env.REGISTRY_IMAGE }}:corebuild \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -f Dockerfiles/SDR/corebuild.docker \
            --push \
            .

      - name: Save Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}

  sdr_light:
    runs-on: ubuntu-latest
    needs: corebuild
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set up Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.platform }}-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push sdr_light image with corebuild base
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            --build-arg BASE_IMAGE=${{ env.REGISTRY_IMAGE }}:corebuild \
            -t ${{ env.REGISTRY_IMAGE }}:sdr_light \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -f Dockerfiles/SDR/sdr_light.docker \
            --push \
            .

      - name: Save Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}

  sdr_full:
    runs-on: ubuntu-latest
    needs: sdr_light
    strategy:
      fail-fast: false
      matrix:
        platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Set up Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.platform }}-

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push sdr_full image with sdr_light base
        run: |
          docker buildx build --platform ${{ matrix.platform }} \
            --build-arg BASE_IMAGE=${{ env.REGISTRY_IMAGE }}:sdr_light \
            -t ${{ env.REGISTRY_IMAGE }}:sdr_full \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache-new \
            -f Dockerfiles/SDR/sdr_full.docker \
            --push \
            .

      - name: Save Docker Cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-new
          key: ${{ runner.os }}-buildx-${{ matrix.platform }}-${{ github.sha }}